# vim: set ft=yaml ts=2 expandtab:
---

name: CHECK

on:  # yamllint disable-line rule:truthy
  workflow_dispatch:
  schedule:
    - cron: '40 15 * * 6'

jobs:

  job_set_matrix:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ansible_collections/mafalb/containerimages
    steps:
      - name: checkout collection mafalb.containerimages
        uses: actions/checkout@v2
        with:
          path: ansible_collections/mafalb/containerimages
      - name: Generate Matrix
        id: step_set_matrix
        run: |
          echo ::set-output name=matrix::$(cat imagetree.yml | python yaml2json.py|jq '[.images|to_entries[].key]')
    outputs:
          matrix: ${{ steps.step_set_matrix.outputs.matrix }}

  build_image:
    needs: job_set_matrix
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      max-parallel: 1

      matrix: 
        os: ${{fromJSON(needs.job_set_matrix.outputs.matrix)}}

    env:
      CI_NAME: "${{ matrix.os }}"
      CI_REGISTRY: "ghcr.io"
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1

    defaults:
      run:
        working-directory: ansible_collections/mafalb/containerimages

    steps:

      - name: checkout collection mafalb.containerimages
        uses: actions/checkout@v2
        with:
          path: ansible_collections/mafalb/containerimages

      - name: install necessary tools into a python virtualenv
        run: |
          make tools

      - name: loop through all images for that os
        run: |
          while read item
          do
            item=$(echo ${item}|base64 --decode)
            echo 'OS<<EOF' >>$GITHUB_ENV
            echo $item|jq -r '.os' >>$GITHUB_ENV
            echo 'EOF' >>$GITHUB_ENV
            echo "FLAVOR=$(echo $item|jq -r '.flavor')" >>$GITHUB_ENV
            echo "BASE_IMAGE=$(echo $item|jq -r '.base_image')" >>$GITHUB_ENV
          done < <(cat imagetree.yml|python3 yaml2json.py|jq -r '.images["centos7"][] | @base64')

      - name: loop through all images for that os
        run: |
          echo $CI_NAME
          echo $OS
          echo $FLAVOR
          echo $BASE_IMAGE

      - name: pull container images
        if: false
        run: |
          podman login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} ghcr.io
          podman pull ghcr.io/${{ github.actor }}/${{ matrix.os }}-${{ matrix.flavor }}:latest

      - name: debug
        if: false
        run: |
          podman images
          podman inspect ghcr.io/${{ github.actor }}/${{ matrix.os }}-${{ matrix.flavor }}:latest

      - name: verify image
        if: false
        run: |
          source ~/.virtualenvs/ci-tools/bin/activate
          molecule test -s check --platform-name ci-${{ matrix.flavor }}

...
