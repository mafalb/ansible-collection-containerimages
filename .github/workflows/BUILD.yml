# vim: set ft=yaml ts=2 expandtab:
---

name: BUILD

on:  # yamllint disable-line rule:truthy
  workflow_dispatch:
    inputs:
      os:
        description: an os, e.g. centos7
        required: true
      flavor:
        description: the flavor, e.g. base or systemd
        required: true
      build_dependents:
        default: false

jobs:

  build_image:

    runs-on: ubuntu-20.04

    env:
      BUILD_DEPENDENTS: "${{ github.event.inputs.build_dependents }}"
      CI_NAME: "${{ github.event.inputs.os }}"
      FLAVOR: "${{ github.event.inputs.flavor }}"
      CI_TARGET: "${{ github.event.inputs.os }}-${{ github.event.inputs.flavor }}"
      CI_REGISTRY_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      CI_REGISTRY_USER: "${{ github.actor }}"
      CI_REGISTRY: "ghcr.io"
      CI_PAT: "${{ secrets.PAT }}"
      GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1

    defaults:
      run:
        working-directory: ansible_collections/mafalb/containerimages

    steps:

      - name: checkout collection mafalb.containerimages
        uses: actions/checkout@v2
        with:
          path: ansible_collections/mafalb/containerimages

      - name: pull parent container
        run: |
          item=$(cat imagetree.yml|python3 yaml2json.py|jq -r '.images["$CI_NAME"][]|select(.flavor=="$FLAVOR")')
          _OS=$(echo $item|jq -r '.os')
          _FLAVOR=$(echo $item|jq -r '.flavor')
          BASE_IMAGE=$(echo $item|jq -r '.base_image')
          PARENT=$(echo $item|jq -r '.parent')
          
          # assertions
          test "$_OS" = "$CI_NAME"
          test "$_FLAVOR" = "$FLAVOR"

          if test -n "$PARENT"
          then
            PARENT_IMAGE="${CI_REGISTRY}/${{ github.actor }}/${CI_NAME}-${PARENT}:latest"
            podman login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} ghcr.io
            podman pull ${CI_REGISTRY}/${{ github.actor }}/${CI_NAME}-${PARENT}:latest
            podman tag ${CI_REGISTRY}/${{ github.actor }}/${CI_NAME}-${PARENT}:latest localhost/${{ github.actor }}/${CI_NAME}-${PARENT}
          fi

      - name: install necessary tools into a python virtualenv
        run: |
          make tools

      - name: build image
        run: |
          source ~/.virtualenvs/ci-tools/bin/activate
          make deps
          make $CI_TARGET

      - name: debug
        run: |
          podman images
          podman inspect localhost/mafalb/$CI_TARGET

      - name: run tests and push image
        run: |
          source ~/.virtualenvs/ci-tools/bin/activate
          CI_IMAGE=localhost/mafalb/$CI_TARGET molecule test -s publish --platform-name ci-$FLAVOR

      - name: push image
        if: false
        run: |
          podman login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} ghcr.io
          source ~/.virtualenvs/ci-tools/bin/activate
          ansible-bender push ghcr.io/${{ github.actor }}/$CI_TARGET

...
