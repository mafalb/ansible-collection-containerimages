# vim: set ft=yaml ts=2 expandtab:
---

name: BUILD

on:  # yamllint disable-line rule:truthy
  workflow_dispatch:
    inputs:
      os:
        description: an os, e.g. centos7
        required: true
      flavor:
        description: the flavor, e.g. base or systemd
        required: true
      build_dependents:
        default: false

jobs:

  build_image:

    runs-on: ubuntu-20.04

    env:
      BUILD_DEPENDENTS: "${{ github.event.inputs.build_dependents }}"
      CI_NAME: "${{ github.event.inputs.os }}"
      FLAVOR: "${{ github.event.inputs.flavor }}"
      CI_TARGET: "${{ github.event.inputs.os }}-${{ github.event.inputs.flavor }}"
      CI_REGISTRY_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      CI_REGISTRY_USER: "${{ github.actor }}"
      CI_REGISTRY: "ghcr.io"
      CI_PAT: "${{ secrets.PAT }}"
      GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1

    defaults:
      run:
        working-directory: ansible_collections/mafalb/containerimages

    steps:

      - name: checkout collection mafalb.containerimages
        uses: actions/checkout
        with:
          path: ansible_collections/mafalb/containerimages

      - name: pull parent container
        run: |
          PARENT=$(cat imagetree.yml|python3 bin/containerimages.py parent --os $CI_NAME --flavor $FLAVOR)
          PARENT_IMAGE=$(cat imagetree.yml|python3 bin/containerimages.py parentimage --os $CI_NAME --flavor $FLAVOR)

          if test "$PARENT" != None -a "$PARENT_IMAGE" = 'None'
          then
            PARENT_IMAGE="${CI_REGISTRY}/${{ github.actor }}/${CI_NAME}-${PARENT}:latest"
            podman login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} ghcr.io
            podman pull ${CI_REGISTRY}/${{ github.actor }}/${CI_NAME}-${PARENT}:latest
            podman tag ${CI_REGISTRY}/${{ github.actor }}/${CI_NAME}-${PARENT}:latest localhost/${CI_NAME}-${PARENT}
          fi
          podman images

      - name: install necessary tools into a python virtualenv
        run: |
          make tools

      - name: build image
        run: |
          source ~/.virtualenvs/ci-tools/bin/activate
          make deps
          make $CI_TARGET

      - name: build dependent images
        if: ${{ github.event.inputs.build_dependents }}
        run: |
          echo "::group::Get data about child images"
          children=$(cat imagetree.yml|python3 bin/containerimages.py children --os $CI_NAME --flavor ${{ github.event.inputs.flavor }})
          echo $children
          echo "::endgroup::"
          
          source ~/.virtualenvs/ci-tools/bin/activate

          for child in $children
          do
            echo "::group::build $child"
            make ${{ github.event.inputs.os }}-$child
            echo "::endgroup::"
          done

          # make it available to subsequent steps
          echo "children=$children" >>$GITHUB_ENV

      - name: debug
        run: |
          podman images
          for child in $children
          do
            echo "::group::debug for $child"
            podman inspect localhost/${CI_NAME}-$child
            echo "::endgroup::"
          done

      - name: run tests and push image
        run: |
          source ~/.virtualenvs/ci-tools/bin/activate
          for FLAVOR in $FLAVOR $children
          do
            echo "::group::test ${CI_NAME}-$FLAVOR"
            CI_IMAGE=localhost/${CI_NAME}-$child molecule test -s publish --platform-name ci-$FLAVOR
            echo "::endgroup::"
          done

...
