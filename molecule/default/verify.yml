# vim: set ft=yaml ts=2 expandtab:
---

- name: verify
  hosts: ci

  vars:
    pkg_mgr_cache:
    - /var/lib/apt/lists
    - /var/cache/dnf
    - /var/cache/yum

  tasks:

  - name: get installed packages
    package_facts:

  - name: python 2 is installed
    assert:
      that:
      - "'python' in ansible_facts.packages"
      - "'python3' not in ansible_facts.packages"
    when: inventory_hostname in ['ci-debian9','ci-centos7']

  - name: python 3 or platform-python is installed
    assert:
      that:
      - "'python3' in ansible_facts.packages or 'platform-python' in ansible_facts.packages"
      - not ('python3' in ansible_facts.packages and 'platform-python' in ansible_facts.packages)
    when:
    - inventory_hostname not in ['ci-debian9','ci-centos7']

  - name: platform python is installed
    assert:
      that:
      - "'platform-python' in ansible_facts.packages"
      - "'python3' not in ansible_facts.packages"
    when:
    - inventory_hostname not in ['ci-debian9','ci-centos7']
    - inventory_hostname is not match('ci-fedora')
    - ansible_os_family == 'RedHat'

  - name: get contents of package manager cache
    shell: |
      set -o pipefail
      ls -1 {{ item }}|wc -l
    loop: "{{ pkg_mgr_cache }}"
    register: _pkg_mgr_cache
    changed_when: false
    failed_when: false

  - name: debug
    debug:
      var: _pkg_mgr_cache

  - name: package manager cache is empty
    assert:
      that: item.stdout == "0"
    when: item.rc == 0
    loop: "{{ _pkg_mgr_cache.results }}"

- name: Check built images
  hosts: ci
  vars:
    ci_name: "{{ lookup('env','CI_NAME') }}"
    ci_image: "{{ lookup('env','CI_IMAGE') }}"
  tasks:
  - name: assert that ci_name is set
    assert:
      that:
      - ci_name|length > 0
  - name: the built images are present
    command: docker inspect localhost/{{ ci_name }}-systemd:ci

...
