# vim: set ft=yaml ts=2 expandtab:
---

- name: Create buildah instances
  hosts: localhost
  connection: local
  gather_facts: false

  module_defaults:
    shell:
      executable: /bin/bash

  vars:
    python_pkg:
      debian9: python

  tasks:

  - name: buildah instance is created
    mafalb.container.buildah_container:
      name: "{{ item.name }}"
      image: "{{ item.image }}"
      cap_add: "{{ item.cap_add if item.cap_add is defined else item.capabilities|default(omit) }}"
      cap_drop: "{{ item.cap_drop|default(omit) }}"
      state: present
    loop: "{{ molecule_yml.platforms }}"
    register: buildahs

  - name: debug
    debug:
      var: buildahs

  - name: python is present  # noqa no-changed-when 301
    shell: |
      buildah run {{ buildah.container.Container }} bash -c "apt update &&
        apt-get install -y {{ python_pkg[buildah.container.Container|replace('ci-','',1)]|default('python3') }}"
    loop: "{{ buildahs.results }}"
    when:
    - buildah.container.Container is match("ci-ubuntu") or buildah.container.Container is match("ci-debian")
    loop_control:
      loop_var: buildah

  - name: Populate instance config dict
    set_fact:
      instance_conf_dict: {
        instance: "{{ buildah.container.Container }}",
        login_cmd: 'podman exec -ti {{ buildah.container.Container }} bash',
        connection: buildah,
      }
    loop: "{{ buildahs.results }}"
    loop_control:
      loop_var: buildah
    register: instance_config_dict

  - name: debug
    debug: var=instance_config_dict.results

  - name: Convert instance config dict to a list
    set_fact:
      instance_conf: "{{ instance_config_dict.results | map(attribute='ansible_facts.instance_conf_dict') | list }}"

  - name: Dump instance config
    copy:
      content: |
        # Molecule managed

        {{ instance_conf | to_json | from_json | to_yaml }}
      dest: "{{ molecule_instance_config }}"
      mode: "0644"

...
